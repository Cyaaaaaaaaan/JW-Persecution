{"version":3,"sources":["globalStyles.ts","styles.ts","logo.png","RightNav.tsx","Burger.tsx","Navbar.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","StyledBurger","styled","div","props","open","Nav","nav","Ul","ul","Logo","img","LogoUl","RightNav","src","alt","to","activeStyle","fontWeight","color","exact","path","Burger","useState","setOpen","onClick","Navbar","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKA2CeA,EAzCKC,YAAH,o0BCKJC,EAAeC,IAAOC,IAAV,+nBAiBD,SAACC,GAAD,OAAYA,EAAMC,KAAO,UAM9B,SAACD,GAAD,OAAYA,EAAMC,KAAO,gBAAkB,eAG3C,SAACD,GAAD,OACXA,EAAMC,KAAO,mBAAqB,mBACzB,SAACD,GAAD,OAAYA,EAAMC,KAAO,EAAI,KAG3B,SAACD,GAAD,OAAYA,EAAMC,KAAO,iBAAmB,eAIlDC,EAAMJ,IAAOK,IAAV,2cAwBHC,EAAKN,IAAOO,GAAV,48BAmCE,SAACL,GAAD,OACXA,EAAMC,KAAO,gBAAkB,sBAqBxBK,EAAOR,IAAOS,IAAV,2LAWJC,EAASV,IAAOS,IAAV,sMCtIJ,GDiJKT,IAAOC,IAAV,8fCjJF,IAA0B,kC,6BCgG1BU,MA/Ef,SAAkBT,GAChB,OACE,eAAC,IAAD,WACE,eAAC,EAAD,CAAMC,KAAMD,EAAMC,KAAlB,UACE,cAAC,EAAD,CAAUS,IAAKJ,EAAMK,IAAK,sBAE1B,cAAC,IAAD,CACEC,GAAG,QACHC,YAAa,CACXC,WAAY,OACZC,MAAO,WAJX,SAOE,wCAEF,cAAC,IAAD,CACEH,GAAG,WACHC,YAAa,CACXC,WAAY,OACZC,MAAO,WAJX,SAOE,2CAEF,cAAC,IAAD,CACEH,GAAG,OACHC,YAAa,CACXC,WAAY,OACZC,MAAO,WAJX,SAOE,uCAEF,cAAC,IAAD,CACEH,GAAG,YACHC,YAAa,CACXC,WAAY,OACZC,MAAO,WAJX,SAOE,wDAEF,cAAC,IAAD,CACEH,GAAG,SACHC,YAAa,CACXC,WAAY,OACZC,MAAO,WAJX,SAOE,yCAEF,cAAC,IAAD,CACEH,GAAG,cACHC,YAAa,CACXC,WAAY,OACZC,MAAO,WAJX,SAOE,iDAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAK,6EAFP,kBAMA,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,oBAIA,cAAC,IAAD,CAAUL,GAAG,kBCvENM,EAdA,WACb,MAAwBC,oBAAS,GAAjC,mBAAOlB,EAAP,KAAamB,EAAb,KAEA,OACE,qCACE,eAAC,EAAD,CAAgBnB,KAAMA,EAAMoB,QAAS,kBAAMD,GAASnB,IAApD,UACE,wBACA,wBACA,2BAEF,cAAC,EAAD,CAAUA,KAAMA,QCLP,SAASqB,EAAOtB,GAC7B,OACE,qCACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAQU,IAAKJ,EAAMK,IAAI,wBAEzB,cAAC,EAAD,IACCX,EAAMuB,YCZbC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.284c1862.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Arial';\r\n  }\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    background-color: #2e2e2e;\r\n    -webkit-border-radius: 0px;\r\n  }\r\n  ::-webkit-scrollbar:hover {\r\n    background-color: rgba(0, 0, 0, 0.09);\r\n  }\r\n  ::-webkit-scrollbar-thumb:vertical {\r\n    -webkit-border-radius: 0px;\r\n    background: #2e2e2e;\r\n  }\r\n  ::-webkit-scrollbar-thumb:vertical:active {\r\n    -webkit-border-radius: 0px;\r\n    background: #2e2e2e;\r\n  }\r\n  ::-webkit-scrollbar {\r\n    width: 9px;\r\n    background-color: #CCC\r\n  }\r\n  ::-webkit-scrollbar:hover {\r\n    background-color: #CCC;\r\n  }\r\n  ::-webkit-scrollbar-thumb:vertical {\r\n    background: #2e2e2e;\r\n  }\r\n\r\n  body {\r\n    padding: 0px;\r\n    margin: 0px;\r\n    width: 100vw;\r\n    overflow-y: auto;\r\n    overflow-x: auto;\r\n    background-color: #e3e3e3;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import styled from 'styled-components'\r\n\r\ninterface INav {\r\n  open: boolean\r\n  href?: string\r\n}\r\n\r\nexport const StyledBurger = styled.div<INav>`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  position: fixed;\r\n  top: 15px;\r\n  right: 20px;\r\n  z-index: 20;\r\n  display: none;\r\n\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-flox: column nowrap;\r\n  }\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background-color: ${(props) => (props.open ? '#000' : '#000')};\r\n    border-radius: 10px;\r\n    transform-origin: 1px;\r\n    transition: all 0.3s linear;\r\n    cursor: pointer;\r\n    &:nth-child(1) {\r\n      transform: ${(props) => (props.open ? 'rotate(45deg)' : 'rotate(0)')};\r\n    }\r\n    &:nth-child(2) {\r\n      transform: ${(props) =>\r\n        props.open ? 'translateX(100%)' : 'translateX(0)'};\r\n      opacity: ${(props) => (props.open ? 0 : 1)};\r\n    }\r\n    &:nth-child(3) {\r\n      transform: ${(props) => (props.open ? 'rotate(-45deg)' : 'rotate(0)')};\r\n    }\r\n  }\r\n`\r\nexport const Nav = styled.nav`\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #fdfdfdfa;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  @media (max-width: 678px) {\r\n    width: 100vw;\r\n  }\r\n\r\n  span {\r\n    font-size: 30px;\r\n    @media only screen and (max-width: 600px) {\r\n      font-size: 20px;\r\n      :nth-child(2) {\r\n        font-size: 16px !important;\r\n        margin-top: 0px !important;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Ul = styled.ul<INav>`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  position: absolute;\r\n  width: 90%;\r\n  top: 0;\r\n  justify-content: flex-end;\r\n  margin-top: 0px;\r\n  align-items: center;\r\n  font-size: 18px;\r\n  height: 110px;\r\n  margin-left: 20px;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    text-transform: none;\r\n    font-weight: bold;\r\n    color: #000;\r\n    cursor: pointer;\r\n    transition: 0.4s;\r\n\r\n    &:hover {\r\n      color: #ffc106;\r\n    }\r\n  }\r\n\r\n  li {\r\n    padding: 18px 10px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    flex-flow: column nowrap;\r\n    background-color: #fdfdfdfa;\r\n    position: fixed;\r\n    transform: ${(props) =>\r\n      props.open ? 'translateX(0)' : 'translateX(100%)'};\r\n    top: -16px;\r\n    right: 0;\r\n    height: 100%;\r\n    width: 180px;\r\n    padding-top: 3.5rem;\r\n    transition: transform 0.3s ease-in-out;\r\n    z-index: 9;\r\n    justify-content: normal;\r\n\r\n    li {\r\n      color: #000;\r\n      margin-right: 34px;\r\n\r\n      &:hover {\r\n        color: #0dadea;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Logo = styled.img`\r\n  margin: 20px 50px 20px 7%;\r\n  width: 160px;\r\n  height: 70px;\r\n  object-fit: contain;\r\n\r\n  @media (max-width: 1250px) {\r\n    margin: 20px 50px 20px 5%;\r\n  }\r\n`\r\n\r\nexport const LogoUl = styled.img`\r\n  margin: 20px 50px 20px 5%;\r\n  display: none;\r\n\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    width: 160px;\r\n    height: 70px;\r\n    object-fit: contain;\r\n  }\r\n`\r\nexport const Icon = styled.div`\r\n  width: 100vw;\r\n  height: calc(100vh - 112px);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  img {\r\n    width: 150px;\r\n    height: 150px;\r\n    pointer-events: none;\r\n    object-fit: contain;\r\n\r\n    @media (prefers-reduced-motion: no-preference) {\r\n      animation: App-logo-spin infinite 20s linear;\r\n    }\r\n  }\r\n\r\n  @keyframes App-logo-spin {\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n","export default __webpack_public_path__ + \"static/media/logo.07c27429.png\";","import React from 'react'\r\nimport * as S from './styles'\r\n\r\nimport Logo from './logo.png'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n  Redirect,\r\n} from 'react-router-dom'\r\n\r\ntype Props = {\r\n  open: boolean\r\n}\r\n\r\nfunction RightNav(props: Props) {\r\n  return (\r\n    <Router>\r\n      <S.Ul open={props.open}>\r\n        <S.LogoUl src={Logo} alt={'Stephanie Madayag'} />\r\n\r\n        <NavLink\r\n          to='/home'\r\n          activeStyle={{\r\n            fontWeight: 'bold',\r\n            color: '#ffc106',\r\n          }}\r\n        >\r\n          <li>HOME</li>\r\n        </NavLink>\r\n        <NavLink\r\n          to='/history'\r\n          activeStyle={{\r\n            fontWeight: 'bold',\r\n            color: '#ffc106',\r\n          }}\r\n        >\r\n          <li>HISTORY</li>\r\n        </NavLink>\r\n        <NavLink\r\n          to='/now'\r\n          activeStyle={{\r\n            fontWeight: 'bold',\r\n            color: '#ffc106',\r\n          }}\r\n        >\r\n          <li>NOW</li>\r\n        </NavLink>\r\n        <NavLink\r\n          to='/genocide'\r\n          activeStyle={{\r\n            fontWeight: 'bold',\r\n            color: '#ffc106',\r\n          }}\r\n        >\r\n          <li>8 STAGES OF GENOCIDE</li>\r\n        </NavLink>\r\n        <NavLink\r\n          to='/story'\r\n          activeStyle={{\r\n            fontWeight: 'bold',\r\n            color: '#ffc106',\r\n          }}\r\n        >\r\n          <li>STORY</li>\r\n        </NavLink>\r\n        <NavLink\r\n          to='/prevention'\r\n          activeStyle={{\r\n            fontWeight: 'bold',\r\n            color: '#ffc106',\r\n          }}\r\n        >\r\n          <li>PREVENTION</li>\r\n        </NavLink>\r\n      </S.Ul>\r\n\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path='https://github.com/Cyaaaaaaaaan/JW-Persecution/blob/main/public/index.html'\r\n        >\r\n          Home\r\n        </Route>\r\n        <Route exact path='menu2'>\r\n          Menu 2\r\n        </Route>\r\n\r\n        <Redirect to='/menu1' />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default RightNav\r\n","import React, { useState } from 'react'\r\nimport * as S from './styles'\r\n\r\nimport RightNav from './RightNav'\r\n\r\nconst Burger = () => {\r\n  const [open, setOpen] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <S.StyledBurger open={open} onClick={() => setOpen(!open)}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </S.StyledBurger>\r\n      <RightNav open={open} />\r\n    </>\r\n  )\r\n}\r\nexport default Burger\r\n","import React from 'react'\r\nimport * as S from './styles'\r\n\r\nimport Logo from './logo.png'\r\nimport Burger from './Burger'\r\n\r\ntype Props = {\r\n  children?: any\r\n}\r\n\r\nexport default function Navbar(props: Props) {\r\n  return (\r\n    <>\r\n      <S.Nav>\r\n        <S.Logo src={Logo} alt='Stephanie Madayag' />\r\n      </S.Nav>\r\n      <Burger />\r\n      {props.children}\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GlobalsStyles from './globalStyles'\nimport Menu from './Navbar'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalsStyles />\n    <Menu />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}